stages:
 - build
 - test
 - deploy

Debian:
  image: registry.gitlab.com/oath-toolkit/build-images:Debian
  stage: build
  script:
  - echo "--suppressions=$(pwd)/libpskc/tests/libpskc.supp" >> ~/.valgrindrc
  - make bootstrap
  - make syntax-check
  - make V=1 || (find . -name test-suite.log -exec cat {} +; exit 1)
  - make dist
  - sha224sum oath-toolkit-*.tar.gz
  - cd website && ./build-website.sh
  artifacts:
    expire_in: 2 weeks
    paths:
      - oath-toolkit-*.tar.gz
      - website/html

Ubuntu-coverage:
  image: registry.gitlab.com/oath-toolkit/build-images:Ubuntu-coverage
  stage: build
  script:
  - echo "--suppressions=$(pwd)/libpskc/tests/libpskc.supp" >> ~/.valgrindrc
  - make autoreconf
  - ./configure --enable-gcc-warnings --enable-root-tests --enable-valgrind-tests CFLAGS="-g --coverage" || (cat config.log; exit 1)
  - lcov --directory . --zerocounters
  - make check V=1 || (find . -name test-suite.log -exec cat {} +; exit 1)
  - mkdir coverage
  - lcov --directory . --output-file coverage/oath-toolkit.info --capture
  - lcov --remove coverage/oath-toolkit.info '/usr/include/*' '*/liboath/gl/*' '*/liboath/tests/*' '*/libpskc/gl/*' '*/libpskc/tests/*' '*/oathtool/gl/*' '*/pam_oath/tests/*' '*/pskctool/gl/*' -o coverage/oath-toolkit_filtered.info
  - genhtml --output-directory coverage coverage/oath-toolkit_filtered.info --highlight --frames --legend --title "OATH Toolkit"
  artifacts:
    when: on_success
    paths:
      - coverage
  only:
    - master

Fedora-clanganalyzer:
  image: registry.gitlab.com/oath-toolkit/build-images:Fedora-clanganalyzer
  stage: build
  script:
  - make autoreconf
  - scan-build ./configure --with-xmlsec-crypto-engine=openssl || (cat config.log; exit 1)
  - scan-build -o clang-analyzer make V=1
  artifacts:
    when: on_success
    paths:
      - clang-analyzer
  only:
    - master

pages:
  stage: deploy
  needs: ["Debian", "Ubuntu-coverage", "Fedora-clanganalyzer"]
  script:
    - mkdir public
    - mv coverage/ public/
    - mv clang-analyzer/* public/clang-analyzer
    - mv website/html/* public/
  artifacts:
    paths:
    - public
    expire_in: 30 days
  only:
  - master

Ubuntu-xmlsec:
  image: ubuntu:20.04
  Stage: test
  needs: [Debian]
  before_script:
    - apt-get update -qq
    - env DEBIAN_FRONTEND=noninteractive apt-get install -y -qq make gcc pkg-config libpam0g-dev libxmlsec1-dev libxml2-utils datefudge
  script:
  - tar xfa oath-toolkit-*.tar.gz
  - cd `ls -d oath-toolkit-* | grep -v tar.gz`
  - mkdir b
  - cd b
  - ../configure --enable-gcc-warnings --disable-valgrind-tests || (cat config.log; exit 1)
  - make check V=1 || (find . -name test-suite.log -exec cat {} +; exit 1)

AlmaLinux8:
  image: almalinux:8
  stage: test
  needs: [Debian]
  before_script:
  - yum -y install make gcc diffutils file pam-devel
  script:
  - tar xfa oath-toolkit-*.tar.gz
  - cd `ls -d oath-toolkit-* | grep -v tar.gz`
  - ./configure --disable-pskc --enable-gcc-warnings --disable-valgrind-tests || (cat config.log; exit 1)
  - make check V=1 || (find . -name test-suite.log -exec cat {} +; exit 1)

AlmaLinux8-xmlsec:
  image: almalinux:8
  stage: test
  needs: [Debian]
  before_script:
  - yum -y install make gcc diffutils file pam-devel
  - yum -y install libxml2-devel libtool-ltdl-devel
  - dnf -y install epel-release
  - dnf -y --enablerepo=powertools install xmlsec1-openssl-devel
  script:
  - tar xfa oath-toolkit-*.tar.gz
  - cd `ls -d oath-toolkit-* | grep -v tar.gz`
  - ./configure --enable-gcc-warnings --disable-valgrind-tests --with-xmlsec-crypto-engine=openssl || (cat config.log; exit 1)
  - make check V=1 || (find . -name test-suite.log -exec cat {} +; exit 1)

Alpine:
  image: alpine:latest
  stage: test
  needs: [Debian]
  before_script:
  - apk update
  - apk add build-base datefudge
  script:
  - tar xfz oath-toolkit-*.tar.gz
  - cd `ls -d oath-toolkit-* | grep -v tar.gz`
  - ./configure --disable-pskc --enable-gcc-warnings || (cat config.log; exit 1)
  - sed -i -e 's,  /\* Outlandishly-long.*,#if 0,;s,  return 0;,#endif\nreturn 0;,' ./oathtool/gl/tests/test-parse-datetime.c
  - make check V=1 || (find . -name test-suite.log -exec cat {} +; exit 1)

ArchLinux:
  image: archlinux:latest
  stage: test
  needs: [Debian]
  before_script:
  - pacman -Suy --noconfirm make gcc diffutils file
  script:
  - tar xfz oath-toolkit-*.tar.gz
  - cd `ls -d oath-toolkit-* | grep -v tar.gz`
  - mkdir b
  - cd b
  - ../configure --disable-pskc --enable-gcc-warnings || (cat config.log; exit 1)
  - make check V=1 || (find . -name test-suite.log -exec cat {} +; exit 1)

ArchLinux-xmlsec:
  image: archlinux:latest
  stage: test
  needs: [Debian]
  before_script:
  - pacman -Suy --noconfirm make gcc diffutils file xmlsec pkg-config
  script:
  - tar xfz oath-toolkit-*.tar.gz
  - cd `ls -d oath-toolkit-* | grep -v tar.gz`
  - mkdir b
  - cd b
  - ../configure --enable-gcc-warnings || (cat config.log; exit 1)
  - make check V=1 || (find . -name test-suite.log -exec cat {} +; exit 1)

Mingw32:
  image: debian:latest
  stage: test
  needs: [Debian]
  before_script:
    - dpkg --add-architecture i386
    - apt-get update -qq
    - env DEBIAN_FRONTEND=noninteractive apt-get install -y -qq make mingw-w64 wine wine32 wine64 libwine libwine:i386 binfmt-support wine-binfmt
    - update-binfmts --enable wine
  script:
  - tar xfa oath-toolkit-*.tar.gz
  - cd `ls -d oath-toolkit-* | grep -v tar.gz`
  - ./configure --host=i686-w64-mingw32 CC='i686-w64-mingw32-gcc -static-libgcc'
  - make V=1
  - make -C liboath/tests check || (cat liboath/tests/test-suite.log +; exit 1)
  - make -C oathtool/tests check || (cat oathtool/tests/test-suite.log +; exit 1)

Mingw64:
  image: debian:latest
  stage: test
  needs: [Debian]
  before_script:
    - apt-get update -qq
    - env DEBIAN_FRONTEND=noninteractive apt-get install -y -qq make mingw-w64 wine wine64 binfmt-support wine-binfmt
    - update-binfmts --enable wine
  script:
  - tar xfa oath-toolkit-*.tar.gz
  - cd `ls -d oath-toolkit-* | grep -v tar.gz`
  - ./configure --host=x86_64-w64-mingw32
  - make V=1
  - make -C liboath/tests check || (cat liboath/tests/test-suite.log +; exit 1)
  - make -C oathtool/tests check || (cat oathtool/tests/test-suite.log +; exit 1)
